{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst button = document.querySelector(\"[data-start]\");\nconst input = document.querySelector(\"#datetime-picker\");\nconst days = document.querySelector(\"[data-days]\");\nconst hour = document.querySelector(\"[data-hours]\");\nconst minute = document.querySelector(\"[data-minutes]\");\nconst second = document.querySelector(\"[data-seconds]\");\nbutton.disabled = true;\n\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate.getTime() < Date.now()) {\n      iziToast.show({\n        message: 'Please choose a date in the future'\n      });\n    } else {\n      button.disabled = false;\n    }\n  }\n};\n\nconst userChoice = flatpickr(\"#datetime-picker\", options);\n\nbutton.addEventListener(\"click\", () => {\n  button.disabled = true;\n  input.disabled = true;\n    \n  const timeClock = setInterval(() => {\n    const delta = userSelectedDate.getTime() - Date.now();\n    const time = convertMs(delta);\n    days.textContent = addLeadingZero(time.days);\n    hour.textContent = addLeadingZero(time.hours);\n    minute.textContent = addLeadingZero(time.minutes);\n    second.textContent = addLeadingZero(time.seconds);\n\n    if (delta <= 0) {\n      clearInterval(timeClock);\n      button.disabled = false;\n      input.disabled = false;\n    }\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n   return value < 0 ? '00' : value < 10 ? `0${value}` : value;\n}\n"],"names":["button","input","days","hour","minute","second","userSelectedDate","options","selectedDates","iziToast","flatpickr","timeClock","delta","time","convertMs","addLeadingZero","ms","hours","minutes","seconds","value"],"mappings":"+IAKA,MAAMA,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAS,SAAS,cAAc,gBAAgB,EAChDC,EAAS,SAAS,cAAc,gBAAgB,EACtDL,EAAO,SAAW,GAElB,IAAIM,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAC9BF,EAAiB,QAAO,EAAK,KAAK,IAAG,EACvCG,EAAS,KAAK,CACZ,QAAS,oCACjB,CAAO,EAEDT,EAAO,SAAW,EAErB,CACH,EAEmBU,EAAU,mBAAoBH,CAAO,EAExDP,EAAO,iBAAiB,QAAS,IAAM,CACrCA,EAAO,SAAW,GAClBC,EAAM,SAAW,GAEjB,MAAMU,EAAY,YAAY,IAAM,CAClC,MAAMC,EAAQN,EAAiB,QAAS,EAAG,KAAK,IAAG,EAC7CO,EAAOC,EAAUF,CAAK,EAC5BV,EAAK,YAAca,EAAeF,EAAK,IAAI,EAC3CV,EAAK,YAAcY,EAAeF,EAAK,KAAK,EAC5CT,EAAO,YAAcW,EAAeF,EAAK,OAAO,EAChDR,EAAO,YAAcU,EAAeF,EAAK,OAAO,EAE5CD,GAAS,IACX,cAAcD,CAAS,EACvBX,EAAO,SAAW,GAClBC,EAAM,SAAW,GAEpB,EAAE,GAAI,CACT,CAAC,EAED,SAASa,EAAUE,EAAI,CAQrB,MAAMd,EAAO,KAAK,MAAMc,EAAK,KAAG,EAE1BC,EAAQ,KAAK,MAAOD,EAAK,MAAO,IAAI,EAEpCE,EAAU,KAAK,MAAQF,EAAK,MAAO,KAAQ,GAAM,EAEjDG,EAAU,KAAK,MAASH,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAd,EAAM,MAAAe,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASJ,EAAeK,EAAO,CAC5B,OAAOA,EAAQ,EAAI,KAAOA,EAAQ,GAAK,IAAIA,CAAK,GAAKA,CACxD"}